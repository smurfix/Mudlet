#!/usr/bin/env python3

import os
import sys
import trio
import anyio
import yaml
import errno
import subprocess
import asyncclick as click
from functools import partial
from mudpyc.server import Server as MudpycServer, WebServer
from mudpyc.util import combine_dict
from asynctelnet import BaseServer as TelnetServer, server_loop
from contextlib import asynccontextmanager

from mudtest.env import TestEnv

# import pynput
## requires DISPLAY envvar, so do that later

import logging
logger = logging.getLogger("mudlet")

@click.command(help="""\
Run Mudlet tests.
""")
@click.option("-c","--config", type=click.File("r"), help="Config file")
@click.option("--display",type=int,default=42, help="X display# to use. Default: 42")
@click.argument("script",nargs=1)
async def main(display, config, script):
    try:
        cfg = {} if config is None else yaml.safe_load(config)
        test_mud = TestEnv(cfg)
        os.environ["HOME"] = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]),"./home"))
        await test_mud.main(script)
    except Exception as exc:
        logger.exception("Died.")


if __name__ == "__main__":
    logging.basicConfig(level=logging.DEBUG)
    main(_anyio_backend="trio")
